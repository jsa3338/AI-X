[0408_ch02_자료형과 연산자 정리]

■ 5절. 연산자

[연산자]
산술연산 : + - / // % **
할당연산 : = += -= *= /= //= %=
비교연산 : == >= > <= < !=
논리연산 : & | and or not
비트연산 : & | ^
&와 |는 비교연산자보다 우선순위가 높다

■ 6절. 문자열 다루기

문자열 슬라이싱 : 변수[from:stop:step]
len(문자열변수) : 문자개수 반환
upper() : 대문자로
lower() : 소문자로
title() : 각 어절의 첫글자만 대문자로
capitalize() : 첫문자만 대문자로 (영어만?)
count('찾을문자열') : '찾을문자열'이 몇개 들어있는지 개수 반환
find('찾을문자열') : '찾을문자열'의 인덱스를 반환, 왼쪽부터
rfind('찾을문자열') : '찾을문자열'의 인덱스를 반환, 오른쪽부터 찾을 문자열이 없으면 -1을 반환 cf) index('찾을문자열') : '찾을문자열'의 인덱스를 반환. 없으면 오류가 뜸. 그래서 잘 안쓴다.
startswith('특정문자열') : 특정문자열로 시작하는지 여부 (True/false)
endswith('특정문자열') : 특정문자열로 끝나는지 여부 (True/false)
strip() : 좌우 공백 제거
rstrip() : 우 공백 제거
lstrip() : 좌 공백 제거
isdigit() : 문자열이 숫자문자열인지 여부(True/False) "100"
islower() : 소문자 문자열인지 여부
isupper() : 대문자 문자열인지 여부
replace(oldstr, newstr) : oldstr을 newstr로 변경






